"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _possibleConstructorReturn;
var _assertThisInitialized = require("./assertThisInitialized.js");
function _possibleConstructorReturn(self, value) {
  if (value && (_typeof(value) === "object" || typeof value === "function")) {
    return value;
  } else if (value !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return (0, _assertThisInitialized["default"])(self);
}