'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var helperPluginUtils = require('@babel/helper-plugin-utils');
function shouldTransform(path) {
  var node = path.node;
  var functionId = node.id;
  if (!functionId) return false;
  var name = functionId.name;
  var paramNameBinding = path.scope.getOwnBinding(name);
  if (paramNameBinding === undefined) {
    return false;
  }
  if (paramNameBinding.kind !== "param") {
    return false;
  }
  if (paramNameBinding.identifier === paramNameBinding.path.node) {
    return false;
  }
  return name;
}
var index = helperPluginUtils.declare(function (api) {
  api.assertVersion("^7.16.0");
  return {
    name: "plugin-bugfix-safari-id-destructuring-collision-in-function-expression",
    visitor: {
      FunctionExpression: function FunctionExpression(path) {
        var name = shouldTransform(path);
        if (name) {
          var scope = path.scope;
          var newParamName = scope.generateUid(name);
          scope.rename(name, newParamName);
        }
      }
    }
  };
});
exports["default"] = index;