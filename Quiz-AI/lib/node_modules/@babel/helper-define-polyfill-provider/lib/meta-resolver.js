"use strict";

exports.__esModule = true;
exports["default"] = createMetaResolver;
var _utils = require("./utils");
var PossibleGlobalObjects = new Set(["global", "globalThis", "self", "window"]);
function createMetaResolver(polyfills) {
  var staticP = polyfills["static"],
    instanceP = polyfills.instance,
    globalP = polyfills.global;
  return function (meta) {
    if (meta.kind === "global" && globalP && (0, _utils.has)(globalP, meta.name)) {
      return {
        kind: "global",
        desc: globalP[meta.name],
        name: meta.name
      };
    }
    if (meta.kind === "property" || meta.kind === "in") {
      var placement = meta.placement,
        object = meta.object,
        key = meta.key;
      if (object && placement === "static") {
        if (globalP && PossibleGlobalObjects.has(object) && (0, _utils.has)(globalP, key)) {
          return {
            kind: "global",
            desc: globalP[key],
            name: key
          };
        }
        if (staticP && (0, _utils.has)(staticP, object) && (0, _utils.has)(staticP[object], key)) {
          return {
            kind: "static",
            desc: staticP[object][key],
            name: "".concat(object, "$").concat(key)
          };
        }
      }
      if (instanceP && (0, _utils.has)(instanceP, key)) {
        return {
          kind: "instance",
          desc: instanceP[key],
          name: "".concat(key)
        };
      }
    }
  };
}